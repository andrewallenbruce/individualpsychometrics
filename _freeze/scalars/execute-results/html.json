{
  "hash": "37dfd829e975dea619f5ed7c9b855386",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Scalars\"\neditor: source\n---\n\n\n\n\n\n\n[Scalars]{.defword}[A **scalar** is a single value.]{.defword .column-margin} are single numeric values. They are the [elements]{.defword}[**Elements** are the individual numbers in a vector or matrix.]{.defword .column-margin} that compose vectors and matrices. Usually a scalar is represented as an italicized lowercase letter:\n\n$$x = 9$$\n\nTechnically, there are no scalars in R. Pretty much everything in R is a vector of one kind of another. This feature of R makes a lot of things nice and easy for data analysis, though it slows down certain kinds of computations. However, a vector with just one element in it is often treated like a scalar. \n\n## Variable Assignment\n\nIf you want to make a \"scalar\" in R, you assign a value to a variable name like so:\n\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\"}\n\n```{.r .cell-code}\nx <- 1\n```\n:::\n\n\n\n\n:::{.column-margin}\n\nIn most situations, the `=` sign also functions as an assignment operator. It is easier to type than `<-`, so feel free to use it. \n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\"}\n\n```{.r .cell-code}\nx = 1\n```\n:::\n\n\n\n\nThe spaces around the assignment operator are optional, and you can use a more compact style if you wish:\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\"}\n\n```{.r .cell-code}\nx=1\n```\n:::\n\n\n\n\n:::\n\nThe `<-` is called the *assignment operator*. Instead of typing both characters, I use the {{< kbd Alt+- >}} keyboard shortcut (i.e., press and hold {{< kbd Alt >}} while pressing `-`), which puts spaces around the assignment operator.\n\n\n\n\n:::{.callout-note title=\"You Try\"}\n\nCreate a variable `x` by assigning it a value of 5.\n\n```{webr-r}\n#| label: ex-assignment\n\n```\n\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\" solutionsetter='true'}\n\n<details><summary>Suggested Solution</summary>\n\n```{.r .cell-code}\nx <- 5\n\n# If you prefer, the = assignment operator also works:\nx = 5\n\n# To display the value of x, just run it on its own line like so:\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n\n\n\n</details>\n:::\n\n\n\n\n:::\n\n## Scalar--Scalar Operations\n\nScalar operations are the basic arithmetical operators you are familiar with: addition, subtraction, multiplication, division, and exponentiation. \n\nFor example,\n\n$4 + 1 = 5$\n\n4 and 1 are both scalars, and adding them results in a scalar (i.e., 5).\n\nIn R, scalar operations like addition are straightforward:\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\"}\n\n```{.r .cell-code}\n4 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n:::\n\n\n\n\n:::{.column-margin}\n\nBy convention, we put spaces around most operator symbols (e.g., `+`, `-`, `*`, `/`, `^`, `=`) because it makes complex code easier to read. However, the spaces are optional, and R does not care if things look messy:\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\"}\n\n```{.r .cell-code}\n# Scalar addition\n# Putting single spaces around the + operator looks nice\n4 + 5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9\n```\n\n\n:::\n\n```{.r .cell-code}\n# R does not need spaces, though\n4+5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9\n```\n\n\n:::\n\n```{.r .cell-code}\n# R does not care if you are inconsistent or have multiple spaces\n4 +    5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9\n```\n\n\n:::\n:::\n\n\n\n\n:::\n\n::: {.callout-note title=\"You Try\"}\n\nAdd 3 + 2 in R\n\n```{webr-r}\n#| label: ex-addition\n\n```\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\" solutionsetter='true'}\n\n<details><summary>Suggested Solution</summary>\n\n```{.r .cell-code}\n3 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n\n\n\n</details>\n:::\n\n\n\n\n:::\n\n\nOther basic operators are also straightforward. Scalar subtraction with the `-` operator:\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\"}\n\n```{.r .cell-code}\n4 - 1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\n\n\nScalar multiplication with the `*` operator:\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\"}\n\n```{.r .cell-code}\n5 * 6\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 30\n```\n\n\n:::\n:::\n\n\n\n\nScalar division with the `/` operator:\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\"}\n\n```{.r .cell-code}\n6 / 3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n:::\n\n\n\n\nScalar exponentiation with the `^` operator:\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\"}\n\n```{.r .cell-code}\n3 ^ 2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9\n```\n\n\n:::\n\n```{.r .cell-code}\n4 ^ -1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.25\n```\n\n\n:::\n\n```{.r .cell-code}\n4 ^ .5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n:::\n\n\n\n\n::: {.callout-note title=\"You Try\"}\n\nCalculate 101 &minus; 78 in R.\n\n```{webr-r}\n#| label: ex-subtraction\n\n```\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\" solutionsetter='true'}\n\n<details><summary>Suggested Solution</summary>\n\n```{.r .cell-code}\n101 - 78\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 23\n```\n\n\n:::\n\n\n\n</details>\n:::\n\n\n\n\nCalculate 29 &times; 42 in R.\n\n```{webr-r}\n#| label: ex-multiplication\n\n```\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\" solutionsetter='true'}\n\n<details><summary>Suggested Solution</summary>\n\n```{.r .cell-code}\n29 * 42\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1218\n```\n\n\n:::\n\n\n\n</details>\n:::\n\n\n\n\nCalculate 33 squared in R.\n\n```{webr-r}\n#| label: ex-exponentiation\n\n```\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\" solutionsetter='true'}\n\n<details><summary>Suggested Solution</summary>\n\n```{.r .cell-code}\n33 ^ 2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1089\n```\n\n\n:::\n\n\n\n</details>\n:::\n\n\n\n\n:::\n",
    "supporting": [
      "scalars_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}