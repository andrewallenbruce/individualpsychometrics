{
  "hash": "9133992667a1fa0fc14885a3e951339d",
  "result": {
    "engine": "knitr",
    "markdown": "\n\n\n\n\n\n# Unfinished Odds and Ends\n\n\n\n\n\n## Thresholds\n\nThe traditional threshold for diagnosing intellectual disability is 70. If a person's observed IQ $\\left(r_{XX}=.97\\right)$ is 68, what is the probability that the person's true score is 70 or less? \n\nMore generally, given an observed score $X$ with reliability coefficient $r_{XX}$, what is the probability that the associated true score $T$ is less than or equal to threshold $\\tau$?\n\nWhen we predict the true score $T$ with a specific value of $X$, the estimated true score $\\hat{T}$ is:\n\n\n$$\\hat{T}=r_{XX}\\left(X-\\mu_X\\right)+\\mu_X$$\n\nThe standard error of the estimate $\\sigma_{T-\\hat{T}}$ in this prediction is:\n\n$$\\sigma_{T-\\hat{T}}=\\sigma_X\\sqrt{r_{XX}-r_{XX}^2}$$\n\nIf we have reason to assume that the prediction errors are normally distributed, the probability that the true score $T$ is less than or equal to threshold $\\tau$ can be calculated using the standard normal cumulative distribution function $\\Phi$ like so:\n\n$$P(T\\le\\tau)=\\Phi\\left(\\frac{\\tau-\\hat{T}}{\\sigma_{T-\\hat{T}}}\\right)$$\n\nUsing this formula, we can see that our hypothetical person with IQ = 68, the probability that the true score is 70 or lower is about .66. @fig-thresholdprobability shows the probabilities for all values near the diagnostic threshold of 70.\n\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\"}\n::: {.cell-output-display}\n![The Probability a True Score Will Be Less Than or Equal to 70](unfinished_files/figure-html/fig-thresholdprobability-1.svg){#fig-thresholdprobability fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\" button_before='true' button_after='true' codelabel='R Code'}\n:::{.callout-note collapse=\"true\" appearance=\"minimal\"}\n## R Code for @fig-thresholdprobability\n\n```{.r .cell-code}\n# The Probability a True Score Will Be Less Than or Equal to 70\n\n# Reliability Coefficient\nrxx <- 0.97\n\n# Mean of X\nmu <- 100\n\n# SD of X\nsigma <- 15\n\n# Threshold tau\nthreshold <- 70\n\n# Standard error of the estimate in the prediction of T\nsee <- sigma * sqrt(rxx - rxx ^ 2)\n\n# Bounds for plot\nx_min <- 60\nx_max <- 80\n\n# Aspect ratio for plot\nplot_ratio <- x_max - x_min\n\n\n# Data\nd <- tibble(x = seq(x_min, x_max, .2),\n       T_hat = rxx * (x - mu) + mu,\n       p = pnorm((threshold - T_hat) / see),\n       slope = plot_ratio * (p - lag(p)) / (x - lag(x)),\n       text_angle = atan(slope) + ifelse(p > 0, pi / 2, pi / -2))\n\n# Data for integer points\nd_points <- d |> \n  filter(p > .005 & p < .995 & x %in% seq(x_min, x_max))\n\nggplot(d, aes(x, p)) +\n  geom_line(color = myfills[1], \n            linewidth = 1) +\n  geom_point(data = d_points, \n             color = myfills[1], \n             pch = 16, \n             size = 2) +\n  geom_richtext(data = d_points, \n                aes(label = WJSmisc::prob_label(p), \n                    hjust = WJSmisc::angle2hjust(text_angle),\n                    vjust = WJSmisc::angle2vjust(text_angle)), \n                label.padding = unit(0, \"mm\"), \n                label.color = NA,\n                color = myfills[1],\n                size = ggtext_size(16),\n                label.margin = unit(0.5, \"mm\")) +\n    geom_richtext(data = d_points, \n                aes(label = x, \n                    hjust = WJSmisc::angle2hjust(text_angle + pi),\n                    vjust = WJSmisc::angle2vjust(text_angle + pi)), \n                label.padding = unit(0, \"mm\"), \n                label.color = NA,\n                color = myfills[1],\n                size = ggtext_size(16),\n                label.margin = unit(0.5, \"mm\")) +\n  annotate(\"rect\", \n           xmin = -Inf, \n           ymin = -Inf, \n           xmax = threshold, \n           ymax = Inf, \n           alpha = .2, \n           fill = myfills[1]) +\n  scale_x_continuous(\"Observed Score\",\n                     expand = expansion(add = 0),\n                     breaks = seq(40, 160, 5),\n                     minor_breaks = seq(40, 160, 1)) +\n  scale_y_continuous(paste0(\"Probability the True Score &le; \",\n                            threshold),\n                     expand = expansion(add = 0.04),\n                     breaks = seq(0,1,.1),\n                     labels = WJSmisc::prob_label) + \n  labs(caption = paste0(\"*Note:* *<span style='font-family: serif'>&mu;</span>* = 100, *<span style='font-family: serif'>&sigma;</span>* = 15, *r<sub>XX</sub>* = \", prob_label(rxx))) +\n  coord_fixed(ratio = plot_ratio, clip = \"off\") + \n  theme(plot.caption = element_markdown(family = bfont),\n        axis.title.y = element_markdown(family = bfont))\n```\n\n\n:::\n:::\n\n\n\n\n\n\nAs a shortcut to using the formulas displayed above\n\n\n### Multivariate Thresholds\n\nTo diagnose intellectual disability, we need a standardized measure of intellectual functioning (usually an IQ test) and well-validated measure of adaptive functioning. Suppose our two measures correlate at $r = .40.$ The reliability coefficient of the IQ is $r_{iq}=.97$, and the reliability coefficient of the adaptive behavior composite is $r_{ab}=.95.$ Both measures have a mean of $\\mu=100$ and a standard deviation of $\\sigma=15.$ \n\nSuppose that a person with IQ = 68 has an adaptive behavior composite of 67. What is the probability that both true scores are 70 or lower?\n\nThe vector of observed scores is:\n\n$$X=\\{68, 67\\}$$\n\nThe vector of reliability coefficients:\n\n$$r_{XX}=\\{.97,.95\\}$$\n\nThe correlation matrix is:\n\n$$\nR_X=\\begin{bmatrix}\n1&.97\\\\\n.97&1\n\\end{bmatrix}\n$$\n\nThe vector of means is:\n\n$$\\mu_X=\\{100,100\\}$$\n\nThe vector of standard deviations is:\n\n$$\\sigma_X=\\{15,15\\}$$\n\nThe observed covariance matrix is:\n\n$$\\Sigma_X=\\sigma_X^\\prime R_X\\sigma_X$$\n\nThe true score covariance matrix is the same as the observed score covariance matrix except that the diagonal of $\\Sigma_X$ is multiplied by the vector of reliability coefficients $r_{XX}$:\n\n$$\\Sigma_T=\\Sigma_X \\circ \\begin{bmatrix}.97&1\\\\1&.95\\end{bmatrix}$$\n\nThe cross-covariances between $X$ and $T$ also equal $\\Sigma_T$.\n\nWe can use equations from @eatonMultivariateStatisticsVector2007 [p. 116] to specify the conditional means and covariance matrix of the true scores, controlling for the observed scores:\n\n$$\n\\begin{align}\n\\mu_{T\\mkern 2mu\\mid X}&=\\mu_X+\\Sigma_T\\Sigma_X^{-1}\\left(X-\\mu_X\\right)\\\\\n\\Sigma_{T\\mkern 2mu\\mid X}&=\\Sigma_T-\\Sigma_T\\Sigma_X^{-1}\\Sigma_T^\\prime\n\\end{align}\n$$\n\nWe can imagine that the true scores conditioned on the observed scores are multivariate normal variates:\n\n$$\\left(T\\mid X\\right)\\sim\\mathcal{N}\\left(\\mu_{T\\mkern 2mu\\mid X}, \\Sigma_{T\\mkern 2mu\\mid X}\\right)$$\n\nWe can estimate the probability that both true scores are 70 or lower using the cumulative distribution function of the multivariate normal distribution with upper bounds of 70 for both IQ true scores and adaptive behavior true scores. Under the conditions specified previously, @fig-multiplethresholdprobability shows that the probability that both scores are 70 or lower is about .53.\n\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\"}\n::: {.cell-output-display}\n![If IQ = 68 and Adaptive Behavior = 67, what is the probability that both true scores are less than or equal to 70?](unfinished_files/figure-html/fig-multiplethresholdprobability-1.svg){#fig-multiplethresholdprobability fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\" button_before='true' button_after='true' codelabel='R Code'}\n:::{.callout-note collapse=\"true\" appearance=\"minimal\"}\n## R Code for @fig-multiplethresholdprobability\n\n```{.r .cell-code}\n# If IQ = 68 and Adaptive Behavior = 67, \n# what is the probability that both true scores \n# are less than or equal to 70?\n\n# Observed scores\nX <- c(IQ = 68, AB = 67)\n\n# Reliability coefficients\nrxx <- c(IQ = .97, AB = .95)\n\n# Correlation of IQ and AB\nrxy <- .40\n\n# Correlation matrix\nR <- matrix(c(1, rxy, \n              rxy, 1), \n            ncol = 2)\n\n# Means\nmu_X <- c(IQ = 100, AB = 100)\n\n# Standard deviations\ns_X <- diag(c(IQ = 15, AB = 15))\n\n# Covariance Matrix for X\nsigma_X <- s_X %*% R %*% s_X\n\n# Covariance Matrix for True Scores\nsigma_T <- sigma_X\ndiag(sigma_T) <- diag(sigma_X) * rxx\n\n# Conditional T means, given X\nmu_T_X <- as.vector(mu_X + sigma_T %*% solve(sigma_X) %*% (X - mu_X))\n\n# Conditional T covariance matrix, given X\nsigma_T_X <- sigma_T - sigma_T %*% solve(sigma_X) %*% t(sigma_T)\n\n\n# Upper thresholds\ntau <- c(IQ = 70, AB = 70)\n\n# Conditional probability T < tau given X\np <- mvtnorm::pmvnorm(upper = tau, mean = mu_T_X, sigma = sigma_T_X)\n\n\nmvtnorm::rmvnorm(1000, mean = mu_T_X, sigma = sigma_T_X) |> \n  `colnames<-`(c(\"IQ\", \"AB\")) |> \n  as_tibble() |> \n  mutate(truepositive = IQ < tau[1] & AB < tau[2]) |> \n  ggplot(aes(IQ, AB)) + \n  annotate(\"richtext\", \n           x = 100, \n           y = 100, \n           label = \"*r<sub>xy</sub>* = .40\", \n           label.color = NA, \n           label.margin = unit(0,\"mm\"),\n           size = ggtext_size(24)) + \n  annotate(\"rect\", \n           xmin = -Inf, \n           ymin = -Inf, \n           xmax = tau[1], \n           ymax = tau[2], \n           fill = myfills[2], \n           alpha = .2) +\n    geom_polygon(\n    data = WJSmisc::cor_ellipse(\n      rxy, \n      mean = mu_X, \n      sd = c(15,15)), \n    aes(x,y), \n    alpha = .1) +\n  geom_polygon(\n    data = WJSmisc::cor_ellipse(\n      cov2cor(sigma_T_X)[2,1], \n      mean = mu_T_X, \n      sd = sqrt(diag(sigma_T_X))), \n    aes(x,y), \n    alpha = .1) +\n  scale_x_continuous(\"IQ (*r<sub>xx</sub>* =.97)\", breaks = seq(40, 160, 15), \n                     minor_breaks = seq(40, 160, 5), \n                     limits = c(40, 160), expand = expansion())  +\n  scale_y_continuous(\"Adaptive Behavior Composite (*r<sub>yy</sub>* =.95)\", \n                     breaks = seq(40, 160, 15), \n                     minor_breaks = seq(40, 160, 5), \n                     limits = c(40, 160), expand = expansion()) +\n  geom_point(aes(color = truepositive), \n             size = 0.5, \n             pch = 16, \n             alpha = .4) + \n  scale_color_manual(values = myfills) + \n  coord_fixed(xlim = c(35,165), ylim = c(35,165)) + \n  theme(legend.position = \"none\", \n        axis.title.x = element_markdown(), \n        axis.title.y = element_markdown()) +\n  annotate(\"point\", x = X[1], y = X[2], size = 2) +\n  annotate(\"text\", x = 52.5, y = 50, \n           label = paste0(\"Given the observed\\nscores, the probability\\nboth true scores are\\n 70 or below is \", \n                          WJSmisc::prob_label(p), \".\"),\n           size = WJSmisc::ggtext_size(17)) +\n  annotate(\"text\",\n           x = X[1],\n           y = X[2],\n           label = paste0(\"(\", x = X[1], \",\", y = X[2], \")\"),\n           hjust = 1.05,\n           vjust = 1.1,\n           size = WJSmisc::ggtext_size(24))\n```\n\n\n:::\n:::\n\n\n\n\n\n\n# Multivariate Thresholds and True Scores\n\n\n\n\n\n::: {.cell .fig-cap-location-margin .tbl-cap-location-margin layout-align=\"center\"}\n\n```{.r .cell-code}\nr_xx <- .96\nv_name <- c(\"IQ\", \"IQ_true\")\nthreshold <- 70\nsigma <- matrix(c(1,rep(r_xx,3)), nrow = 2, dimnames = list(v_name,v_name)) * 15^2\nmu <- c(IQ = 100, IQ_true = 100)\n\np <- tibble(lower = list(c(IQ = -Inf, IQ_true = -Inf),\n                    c(IQ = -Inf, IQ_true = threshold),\n                    c(IQ = threshold, IQ_true = -Inf),\n                    c(IQ = threshold, IQ_true = threshold),\n                    c(IQ =  -Inf, IQ_true =  -Inf),\n                    c(IQ =  threshold, IQ_true =  -Inf),\n                    c(IQ =  -Inf, IQ_true =  -Inf),\n                    c(IQ =  -Inf, IQ_true =  threshold)),\n       upper = list(c(IQ = threshold, IQ_true = threshold),\n                    c(IQ = threshold, IQ_true = Inf),\n                    c(IQ = Inf, IQ_true = threshold),\n                    c(IQ = Inf, IQ_true = Inf),\n                    c(IQ = threshold, IQ_true = Inf),\n                    c(IQ = Inf, IQ_true = Inf),\n                    c(IQ = Inf, IQ_true = threshold),\n                    c(IQ = Inf, IQ_true = Inf)),\n       outcome = c(\"TP\", \"FP\", \"FN\", \"TN\", \"P\", \"N\", \"D+\", \"D-\"),\n       p = pmap_dbl(list(lower = lower, upper = upper), \\(lower, upper) mvtnorm::pmvnorm(lower, upper, mean = mu, sigma = sigma) |> as.vector())) |> \n  select(outcome,p) |> \n  deframe()\np\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         TP          FP          FN          TN           P           N \n0.017460927 0.005289205 0.003152489 0.974097379 0.022750132 0.977249868 \n         D+          D- \n0.020613417 0.979386583 \n```\n\n\n:::\n\n```{.r .cell-code}\ntibble(Statistic = c(\"Sensitivity\", \n                     \"Specificity\",\n                     \"PPV\",\n                     \"NPV\",\n                     \"Overall Accuracy\",\n                     \"Prevalence\",\n                     \"Selection Ratio\",\n                     \"Positive Likelihood Ratio\",\n                     \"Negative Likelihood Ratio\",\n                     \"True Positive Rate\",\n                     \"False Positive Rate\",\n                     \"True Negative Rate\",\n                     \"False Negative Rate\"),\n       Value = c(p[\"TP\"] / p[\"D+\"],\n                 p[\"TN\"] / p[\"D-\"],\n                 p[\"TP\"] / p[\"P\"],\n                 p[\"TN\"] / p[\"N\"],\n                 p[\"TP\"] + p[\"TN\"],\n                 p[\"D+\"],\n                 p[\"P\"],\n                 (p[\"TP\"] / p[\"D+\"]) / (p[\"FP\"] / p[\"D-\"]),\n                 (p[\"FN\"] / p[\"D+\"]) / (p[\"TN\"] / p[\"D-\"]),\n                 p[\"TP\"],\n                 p[\"FP\"],\n                 p[\"TN\"],\n                 p[\"FN\"]\n                 )) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 2\n   Statistic                     Value\n   <chr>                         <dbl>\n 1 Sensitivity                 0.847  \n 2 Specificity                 0.995  \n 3 PPV                         0.768  \n 4 NPV                         0.997  \n 5 Overall Accuracy            0.992  \n 6 Prevalence                  0.0206 \n 7 Selection Ratio             0.0228 \n 8 Positive Likelihood Ratio 157.     \n 9 Negative Likelihood Ratio   0.154  \n10 True Positive Rate          0.0175 \n11 False Positive Rate         0.00529\n12 True Negative Rate          0.974  \n13 False Negative Rate         0.00315\n```\n\n\n:::\n\n```{.r .cell-code}\ntibble(statistic = c(\"Sensitivity\", \n                     \"Specificity\", \n                     \"PPV\", \n                     \"NPV\"),\n       lowerx = list(c(IQ = -Inf, IQ_true = -Inf),\n                     c(IQ = threshold, IQ_true = -Inf),\n                     c(IQ = -Inf, IQ_true = -Inf),\n                     c(IQ = -Inf, IQ_true = threshold)),\n       upperx = list(c(IQ = threshold, IQ_true = Inf),\n                     c(IQ = Inf, IQ_true = Inf),\n                     c(IQ = Inf, IQ_true = threshold),\n                     c(IQ = Inf, IQ_true = Inf)),\n       lower = list(c(IQ = -Inf, IQ_true = -Inf),\n                    c(IQ = -Inf, IQ_true = threshold),\n                    c(IQ = -Inf, IQ_true = -Inf),\n                    c(IQ = threshold, IQ_true = -Inf)),\n       upper = list(c(IQ = Inf, IQ_true = threshold),\n                    c(IQ = Inf, IQ_true = Inf),\n                    c(IQ = threshold, IQ_true = Inf),\n                    c(IQ = Inf, IQ_true = Inf)),\n       value = pmap_dbl(list(lowerx = lowerx,\n                             upperx = upperx,\n                             lower = lower,\n                             upper = upper), tmvtnorm::ptmvnorm, \n                        mean = mu, \n                        sigma = sigma)) |> \n  select(statistic, value)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 2\n  statistic   value\n  <chr>       <dbl>\n1 Sensitivity 0.847\n2 Specificity 0.995\n3 PPV         0.768\n4 NPV         0.997\n```\n\n\n:::\n\n```{.r .cell-code}\nlist(\n  list(\n    statistic = \"Sensitivity\",\n    lowerx = c(IQ = -Inf, IQ_true = -Inf),\n    upperx = c(IQ = threshold, IQ_true = Inf),\n    lower = c(IQ = -Inf, IQ_true = -Inf),\n    upper = c(IQ = Inf, IQ_true = threshold)\n  ),\n  list(\n    statistic = \"Specificity\",\n    lowerx = c(IQ = threshold, IQ_true = -Inf),\n    upperx = c(IQ = Inf, IQ_true = Inf),\n    lower = c(IQ = -Inf, IQ_true = threshold),\n    upper = c(IQ = Inf, IQ_true = Inf)\n  ),\n  list(\n    statistic = \"PPV\",\n    lowerx = c(IQ = -Inf, IQ_true = -Inf),\n    upperx = c(IQ = Inf, IQ_true = threshold),\n    lower = c(IQ = -Inf, IQ_true = -Inf),\n    upper = c(IQ = threshold, IQ_true = Inf)\n  ),\n  list(\n    statistic = \"NPV\",\n    lowerx = c(IQ = -Inf, IQ_true = threshold),\n    upperx = c(IQ = Inf, IQ_true = Inf),\n    lower = c(IQ = threshold, IQ_true = -Inf),\n    upper = c(IQ = Inf, IQ_true = Inf)\n  ),\n  list(\n    statistic = \"True Positives\",\n    lowerx = c(IQ = -Inf, IQ_true = -Inf),\n    upperx = c(IQ = threshold, IQ_true = threshold),\n    lower = c(IQ = -Inf, IQ_true = -Inf),\n    upper = c(IQ = Inf, IQ_true = Inf)\n  ),\n  list(\n    statistic = \"False Positives\",\n    lowerx = c(IQ = -Inf, IQ_true = threshold),\n    upperx = c(IQ = threshold, IQ_true = Inf),\n    lower = c(IQ = -Inf, IQ_true = -Inf),\n    upper = c(IQ = Inf, IQ_true = Inf)\n  ),\n  list(\n    statistic = \"True Negatives\",\n    lowerx = c(IQ = threshold, IQ_true = threshold),\n    upperx = c(IQ = Inf, IQ_true = Inf),\n    lower = c(IQ = -Inf, IQ_true = -Inf),\n    upper = c(IQ = Inf, IQ_true = Inf)\n  ),\n  list(\n    statistic = \"False Negatives\",\n    lowerx = c(IQ = threshold, IQ_true = -Inf),\n    upperx = c(IQ = Inf, IQ_true = threshold),\n    lower = c(IQ = -Inf, IQ_true = -Inf),\n    upper = c(IQ = Inf, IQ_true = Inf)\n  )\n  ) |>\n  map(\\(l) {\n    tmvtnorm::ptmvnorm(\n      lowerx = l$lowerx,\n      upperx = l$upperx,\n      lower = l$lower,\n      upper = l$upper,\n      mean = mu,\n      sigma = sigma\n    ) |>\n      as.vector() |>\n      `names<-`(l$statistic)\n  }) |>\n  unlist() |> \n  enframe()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 2\n  name              value\n  <chr>             <dbl>\n1 Sensitivity     0.847  \n2 Specificity     0.995  \n3 PPV             0.768  \n4 NPV             0.997  \n5 True Positives  0.0175 \n6 False Positives 0.00529\n7 True Negatives  0.974  \n8 False Negatives 0.00315\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n## Structure\n\nExploratory factor analysis\n\nConfirmatory factor analysis\n\nStructural equation modeling\n\n## Reliability\n\nRetest reliability\n\nAlternate-form reliability\n\nSplit-half reliability\n\nInternal consistency\n\n* Cronbach's Alpha\n* McDonald's Omega\n\nConditional reliability (IRT)\n\n## Validity\n\nFace validity\n\nContent validity\n\nCriterion-oriented validity\n\n* Concurrent validity\n* Predictive validity\n\nDiscriminant validity\n\nConvergent validity\n\nIncremental validity\n\nConstruct validity\n\n## Profiles\n\nDifference scores\n\nOutliers\n\nHighest-lowest scores\n\nMultivariate profile shape\n\nConditional profiles\n",
    "supporting": [
      "unfinished_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}